Problemin çözümü için kullanılabilecek script kodları

param($AnaVideo);
youtube-dl $AnaVideo;
$HTML=Invoke-WebRequest -Uri $AnaVideo
$HTML.Links | Where-Object { $_.href -like '/watch*' -and $_.title } | % { "https://www.youtube.com"+$_.href; } | select -First 5 | % {  youtube-dl $_; }

örnek kullanım:.\alakali-videolari-indir.ps1 -AnaVideo  https://www.youtube.com/watch?v=3-iCDOYkfms


Bu problemin çözümü için, tam olarak gitmek istediğim yoldan,karşıma çıkan engellerden dolayı gidemedim.
İstediğim yoldan gidince ,istediğim sonuclara ulaşamıyordum.



Asıl çözüme geçmeden önce istediğim yoldan neden çözemediğimi yazacağım.Aşağıda yazdığım çözüm yollarını başka internet sitelerinde deneyip sağlıklı sonuçlar aldım fakat youtube üzerinden deneyince sağlıklı sonuçlar alamadım.

Herhangi bir internet sitesinde,gördüğünüz sayfadaki herşey bir nesnedir ve bu nesneler html taglarının içinden gelir.

Youtube'da herhangi bir videoyu açtığınızda sağ tarafta önerilen ya da alakalı videolar çıkıyor.Bu videoların linkleri de sağ tarafı kapsayan en dış  taşıyıcı olan 
<div id="secondary" class="style-scope ytd-watch-flexy" style="background:red;"></div>  div'inin içerisindedir.

Bende ilgili linkten id'si secondary ya da class'ı "style-scope ytd-watch-flexy" olan ya da içerisinden bu class,id'i isimleri geçen tasıyıcının içerisindeki linkleri çekmeye calısınca hiçbir sonuca ulaşamadım.


Önerilen  videolardan bir tanesinin üzerine gelip öğeyi denetleden,bu videonun taşıyıcının taglarına,class ve id isimlerine bakıp önerilen videoların taşıyıcı html etiketinin ytd-compact-video-renderer,class isminin ise style-scope ytd-watch-next-secondary-results-renderer olduğunu öğrendim. Etiket ve class ismine göre kontrol yapıp ,bu etiket ve class isminde olup içerisindeki linkleri almaya çalışınca gene bir sonuc vermedi.



Bu sefer direkmen video adresinin tanımlı olduğu a href etiketlerini baktım.id'si thumbnail ve class'i yt-simple-endpoint inline-block style-scope ytd-thumbnail olan a etiketi üzeri üzerinden de kontrol yapınca bir sonuca ulaşamadım.Video linkinin olduğu yt-simple-endpoint style-scope ytd-compact-video-renderer class isminde başka bir a href etiketi daha vardı ama burada da bir sonuca ulaşamadım.


Bunların dısında bir çok yöntem daha yönetim fakat gene bir sonuca ulaşamadım.

ilgili linkteki tüm etiket ,class ve id isimlerini çekmeye çalışınca da yukarıdaki etiket,id ve class'ların listelenmediğini farkettim.

Youtube çok dinamik bir internet sitesi bir çok özelliği sayfa yüklendikten sonra geliyor.Html etiketlerinin bazıları da,bazı  aksiyonlardan sonra oluştuğu ya da yüklendiği düşündüğüm için bu yukarıdaki yoldan çözüme ulaşmaktan vazgeçtim.




Ve sonunda hibrit bir yaklaşım sergileyip çözüme ulaşabildim.

Youtube'daki önerilen videoların linki, aşağıdaki adresteki resimde görüldüğü /watch......... diye devam ediyor.

https://i.hizliresim.com/bVA74G.png


Ben de veritabanı dersinde görmüş olduğunuz -like komutunu,buraya uyarlayarak  "/watch" ile başlayıp devam eden tüm linkleri çekip,bu çekmiş olduğum linkler üzerinden işlem yapacağım.


Problem de, sciptadi.ps1 -AnaVideo VideoUrl'si gibi bir kullanım olmasını istediği için , -AnaVideo diye bir parametre ekleyip ana video linkini alacağım.
Aşağıdaki gibi bir yapı kullanarak ,(-AnaVideo) adında bir parametre oluşturdum ki video url'ini alabileyim.

param($AnaVideo);



Ana videoyu'da zaten indireceğimiz için ,aşağıdaki komut ile ana video için indirme yapıyoruz.


youtube-dl $AnaVideo;



Invoke-WebRequest komutunu kullanarak ana videonun olduğu web sayfasının içeriğini alıp,üzerinen işlem yapmak üzere $HTML adlı bir değişkene atıyorum.

$HTML=Invoke-WebRequest -Uri $AnaVideo


En önemli yere geldik.

1-)Aşağıdaki komut anavideo sayfasının içerisindeki tüm linkleri seçiyoruz.

$HTML.Links

2-)Aşağıdaki komut ile,/watch ifadesi ile başlayan ve  videonun ismi olan linkleri seçiyoruz.Böylece sağ kısımdaki önerilen videoların hepsini seçmiş olduk.

Ama bir daha var.Önerilen videoların linkleri aşağıdaki gibi çıkıyor.

/watch?v=3QfDDKkxXUc
/watch?v=Bdt0pz5C4Xc
/watch?v=YN7FuT5vJ7c	
/watch?v=myM2j6rbjIo
.........


Where-Object { $_.href -like '/watch*' -and $_.title }


3-)Bu sorununda üstesinden gelmek için de foreach(% ,foreach'nin kısa yoludur.) döngüsünü kullanarak her birinin başına https://www.youtube.com'u ekliyoruz.

 % { "https://www.youtube.com"+$_.href; }


4-) Problem de ilk 5 video istenildiği için,aşağıdaki komut ile ilk 5 videonun linkini seçiyorum.

 select -First 5 


5-) Son olarak seçilen 5 videonun indirme işlemini başlatıyoruz.

   % {  youtube-dl $_; }




Uyarı:
Youtube çok dinamik bir sistem ve sürekli olarak(Bazen her gün,bazen de gün de iki kez) algoritmasını güncelliyor.Youtube arama sonuçlarını ve önerilen videoları karşımıza çıkarırken kullanıcı deneyimlerini ve görüşlerini de dikkate alıyor.Dolayısıyla  bir video'yu izlerken ,videoyu tekrardan açtığında önerilen videolar değişmiş olabilir!
